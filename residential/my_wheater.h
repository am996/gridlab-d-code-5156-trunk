// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/

#ifndef _my_wheater_h_
#define _my_wheater_h_

#include <staff/common/IService.h>

// *interface.targetNamespace: http://tempui.org/
// *interface.url: http://10.96.12.45:9090/axis2/services/staff.wsdl.Wsdl/get/my_wheater/my_wheater.wsdl



  //! my_wheater service
  // *serviceUri: http://10.96.12.45:9090/axis2/services/my_wheater
  // *soapVersion: 1.1
  // *targetNamespace: http://tempui.org/
  class my_wheater: public staff::IService
  {
  public:
    // *requestElement: WHcreate
    // *responseElement: WHcreateResult
    virtual int WHcreate() = 0;

    // *requestElement: WHinit
    // *responseElement: WHinitResult
    virtual int WHinit() = 0;

    // *requestElement: WHsync
    // *responseElement: WHsyncResult
    virtual int WHsync(int t0, int t1, double heating_element_capacity, double temperature, double tank_setpoint, double tank_UA, double water_demand, double tank_volume, double thermostat_deadband) = 0;

    // *requestElement: WHcommit
    // *responseElement: WHcommitResult
    virtual int WHcommit() = 0;

    // *requestElement: WHtank_state
    // *responseElement: WHtank_stateResult
    virtual int WHtank_state() = 0;

    // *requestElement: WHpostsync
    // *responseElement: WHpostsyncResult
    virtual int WHpostsync() = 0;

    // *requestElement: WHset_time_to_transition
    // *responseElement: WHset_time_to_transitionResult
    virtual void WHset_time_to_transition() = 0;

    // *requestElement: WHset_current_model_and_load_state
    // *responseElement: WHset_current_model_and_load_stateResult
    virtual int WHset_current_model_and_load_state() = 0;

    // *requestElement: WHdhdt
    // *responseElement: WHdhdtResult
    virtual double WHdhdt(double h) = 0;

    // *requestElement: WHactual_kW
    // *responseElement: WHactual_kWResult
    virtual double WHactual_kW() = 0;

    // *requestElement: WHnew_time_1node
    // *responseElement: WHnew_time_1nodeResult
    virtual double WHnew_time_1node(double T0, double T1) = 0;

    // *requestElement: WHnew_temp_1node
    // *responseElement: WHnew_temp_1nodeResult
    virtual double WHnew_temp_1node(double T0, double delta_t) = 0;

    // *requestElement: WHnew_time_2zone
    // *responseElement: WHnew_time_2zoneResult
    virtual double WHnew_time_2zone(double h0, double h1) = 0;

    // *requestElement: WHnew_h_2zone
    // *responseElement: WHnew_h_2zoneResult
    virtual double WHnew_h_2zone(double h0, double delta_t) = 0;

    // *requestElement: WHget_Tambient
    // *responseElement: WHget_TambientResult
    virtual double WHget_Tambient() = 0;
  };


#endif // _my_wheater_h_

